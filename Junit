import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Test;

public class BreakIdentificationTest {

    @Test
    public void testEqualsWithSameValues() {
        BreakIdentification bi1 = new BreakIdentification(123L, 456L, "ABC123");
        BreakIdentification bi2 = new BreakIdentification(123L, 456L, "ABC123");

        assertTrue(bi1.equals(bi2), "Objects with same id, sequenceNumber, and controlID should be equal");
    }

    @Test
    public void testEqualsWithDifferentId() {
        BreakIdentification bi1 = new BreakIdentification(123L, 456L, "ABC123");
        BreakIdentification bi2 = new BreakIdentification(124L, 456L, "ABC123");

        assertFalse(bi1.equals(bi2), "Objects with different id should not be equal");
    }

    @Test
    public void testEqualsWithDifferentSequenceNumber() {
        BreakIdentification bi1 = new BreakIdentification(123L, 456L, "ABC123");
        BreakIdentification bi2 = new BreakIdentification(123L, 457L, "ABC123");

        assertFalse(bi1.equals(bi2), "Objects with different sequenceNumber should not be equal");
    }

    @Test
    public void testEqualsWithDifferentControlID() {
        BreakIdentification bi1 = new BreakIdentification(123L, 456L, "ABC123");
        BreakIdentification bi2 = new BreakIdentification(123L, 456L, "XYZ789");

        assertFalse(bi1.equals(bi2), "Objects with different controlID should not be equal");
    }

    @Test
    public void testEqualsWithNullControlID() {
        BreakIdentification bi1 = new BreakIdentification(123L, 456L, null);
        BreakIdentification bi2 = new BreakIdentification(123L, 456L, null);

        assertTrue(bi1.equals(bi2), "Objects with null controlID should be equal");
    }

    @Test
    public void testEqualsWithNullObject() {
        BreakIdentification bi = new BreakIdentification(123L, 456L, "ABC123");

        assertFalse(bi.equals(null), "Object should not be equal to null");
    }

    @Test
    public void testEqualsWithDifferentType() {
        BreakIdentification bi = new BreakIdentification(123L, 456L, "ABC123");
        String otherType = "String";

        assertFalse(bi.equals(otherType), "Object should not be equal to an object of a different type");
    }
}
