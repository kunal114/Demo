We have an input dataset with N columns and an output dataset with M columns, where M may be greater than, equal to, or less than N. Each output column is derived from one or more input columns using unknown transformation rules, which may vary based on categorical features.

Key Challenges & Considerations
✅ M vs. N Relationship

If M > N, then new output columns are derived through feature generation (e.g., output_col3 = input_col1 + input_col2).

If M < N, then multiple input columns contribute to fewer output features, possibly via aggregation or selection (e.g., output_col1 = max(input_col1, input_col2)).

✅ Handling Categorical Dependencies

The transformation rule for an output column may change depending on a categorical feature.

Example:

If category = "A", output_col1 = input_col1 * 2
If category = "B", output_col1 = input_col2 + 10
This requires conditional rule extraction rather than just mathematical transformations.

✅ Different Values for the Same Output Column

The same input row may produce different output values depending on external conditions.

Example:

Edit
input_col1 = 50, category = "A"  → output_col1 = 100
input_col1 = 50, category = "B"  → output_col1 = 60
This means rule discovery needs to segment data by categorical attributes.

Objective
Automatically derive transformation rules that map input columns (N) to output columns (M).

Detect conditional logic where an output column's rule varies based on a categorical input.

Support feature engineering cases where extra columns are generated (M > N) or reduced (M < N).

Validate rules by applying them to unseen data and ensuring accuracy.
