import org.junit.jupiter.api.Test;
import org.mockito.Mockito;

import java.net.URI;
import java.net.http.HttpResponse;

import static org.junit.jupiter.api.Assertions.*;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.when;

class HTTPResponseExceptionTest {

    @Test
    void testConstructorWithHttpResponse() {
        HttpResponse<String> mockResponse = mock(HttpResponse.class);
        when(mockResponse.statusCode()).thenReturn(400);
        when(mockResponse.uri()).thenReturn(URI.create("http://example.com/api/endpoint"));
        when(mockResponse.body()).thenReturn("Bad Request");

        HTTPResponseException exception = new HTTPResponseException(mockResponse);

        assertEquals("400 http://example.com/api/endpoint Bad Request", exception.getMessage());
        assertSame(mockResponse, exception.getResponse());
    }

    @Test
    void testConstructorWithCause() {
        Throwable cause = new RuntimeException("Something went wrong");
        HTTPResponseException exception = new HTTPResponseException(cause);

        assertSame(cause, exception.getCause());
    }
}
