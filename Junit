import streamlit as st
import pandas as pd
import requests
import os
import time
from pathlib import Path

def download_csv(url, filename):
    response = requests.get(url)
    if response.status_code == 200:
        downloads_path = str(Path.home() / "Downloads")
        filepath = os.path.join(downloads_path, filename)
        with open(filepath, 'wb') as f:
            f.write(response.content)
        return filepath
    else:
        st.error(f"Failed to download file. Status code: {response.status_code}")
        return None

def compare_dataframes(df1, df2):
    # Find rows in df1 but not in df2
    diff1_to_2 = pd.merge(df1, df2, how='outer', indicator=True).query('_merge == "left_only"').drop('_merge', axis=1)
    
    # Find rows in df2 but not in df1
    diff2_to_1 = pd.merge(df1, df2, how='outer', indicator=True).query('_merge == "right_only"').drop('_merge', axis=1)
    
    return diff1_to_2, diff2_to_1

def main():
    st.title("CSV Download and Comparison App")

    # URL for the CSV file
    url = 'https://data-insights.galacloud.joechase.net/extractor/query?gu36-00043be6-0773-4327-6351-45653chay'
    filename = "80043be6-8f72-4327-8351-45653cb07eed.csv"

    if st.button("Download and Process CSV"):
        with st.spinner("Downloading and processing CSV..."):
            downloaded_file = download_csv(url, filename)
            
            if downloaded_file:
                # Wait for the file to be fully written
                time.sleep(2)
                
                # Read the CSV file
                df1 = pd.read_csv(downloaded_file)
                st.success("CSV file downloaded and processed successfully!")
                
                st.subheader("First CSV file preview:")
                st.dataframe(df1.head())
                
                # Store the dataframe in session state
                st.session_state['df1'] = df1
                
                # Delete the original downloaded file
                os.remove(downloaded_file)
                st.info(f"Original downloaded file deleted from Downloads folder.")

    if 'df1' in st.session_state:
        st.subheader("Upload second CSV for comparison")
        uploaded_file = st.file_uploader("Choose a CSV file", type="csv")
        
        if uploaded_file is not None:
            df2 = pd.read_csv(uploaded_file)
            st.subheader("Second CSV file preview:")
            st.dataframe(df2.head())
            
            if st.button("Compare CSVs"):
                diff1_to_2, diff2_to_1 = compare_dataframes(st.session_state['df1'], df2)
                
                st.subheader("Rows in first CSV but not in second CSV:")
                st.dataframe(diff1_to_2)
                
                st.subheader("Rows in second CSV but not in first CSV:")
                st.dataframe(diff2_to_1)
                
                # Option to download the comparison results
                if not diff1_to_2.empty:
                    csv1 = diff1_to_2.to_csv(index=False)
                    st.download_button(
                        label="Download rows unique to first CSV",
                        data=csv1,
                        file_name="diff1_to_2.csv",
                        mime="text/csv",
                    )

                if not diff2_to_1.empty:
                    csv2 = diff2_to_1.to_csv(index=False)
                    st.download_button(
                        label="Download rows unique to second CSV",
                        data=csv2,
                        file_name="diff2_to_1.csv",
                        mime="text/csv",
                    )

if __name__ == "__main__":
    main()
