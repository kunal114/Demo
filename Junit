import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;
import org.springframework.web.client.RestTemplate;

import javax.net.ssl.SSLContext;
import java.io.FileInputStream;
import java.security.KeyStore;

import static org.junit.jupiter.api.Assertions.*;
import static org.mockito.Mockito.*;

@ExtendWith(MockitoExtension.class)
class RestTemplateProviderTest {

    @Mock
    private SecureCredential secureCredential;

    @Mock
    private KeyStore keyStore;

    @Mock
    private SSLContext sslContext;

    @Mock
    private FileInputStream fileInputStream;

    private RestTemplateProvider restTemplateProvider;

    @BeforeEach
    void setUp() {
        restTemplateProvider = new RestTemplateProvider();
        restTemplateProvider.setKeyStorePath("path/to/keystore");
    }

    @Test
    void testGetRestTemplate_SuccessfulCreation() throws Exception {
        // Arrange
        when(secureCredential.getKeystorePassword()).thenReturn("password");
        when(KeyStore.getInstance("JKS")).thenReturn(keyStore);
        
        // Act
        RestTemplate result = restTemplateProvider.getRestTemplate();

        // Assert
        assertNotNull(result);
        assertEquals(2, result.getMessageConverters().size());
    }

    @Test
    void testGetRestTemplate_ExceptionDuringCreation() throws Exception {
        // Arrange
        when(secureCredential.getKeystorePassword()).thenReturn("password");
        when(KeyStore.getInstance("JKS")).thenThrow(new Exception("Keystore error"));

        // Act
        RestTemplate result = restTemplateProvider.getRestTemplate();

        // Assert
        assertNotNull(result);
        assertEquals(0, result.getMessageConverters().size());
    }

    @Test
    void testGetRestTemplate_NullRestTemplateCreation() throws Exception {
        // Arrange
        when(secureCredential.getKeystorePassword()).thenThrow(new RuntimeException("Password error"));

        // Act
        RestTemplate result = restTemplateProvider.getRestTemplate();

        // Assert
        assertNull(result);
    }
}
