import org.junit.jupiter.api.Test;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;
import org.springframework.web.servlet.resource.ResourceResolver;

import java.util.ArrayList;
import java.util.List;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertTrue;
import static org.mockito.Mockito.when;

class ApplicationConfigurationTest {

    @Mock
    private ResourceHandlerRegistry resourceHandlerRegistry;

    private final ApplicationConfiguration configuration = new ApplicationConfiguration();
    private final ApplicationConfiguration.BrowserHistoryConfigurer browserHistoryConfigurer = configuration.new BrowserHistoryConfigurer();

    public ApplicationConfigurationTest() {
        MockitoAnnotations.openMocks(this);
    }

    @Test
    void testResourceLocations() {
        String[] resourceLocations = ApplicationConfiguration.RESOURCE_LOCATIONS;
        assertEquals(6, resourceLocations.length);
        assertEquals("classpath:/META-INF/resources/", resourceLocations[0]);
        assertEquals("classpath:/resources/", resourceLocations[1]);
        assertEquals("classpath:/static/", resourceLocations[2]);
        assertEquals("classpath:/public/", resourceLocations[3]);
        assertEquals("classpath:/", resourceLocations[4]);
        assertEquals("classpath:/***", resourceLocations[5]);
    }

    @Test
    void testAddResourceHandlers() {
        List<ResourceResolver> resolvers = new ArrayList<>();
        when(resourceHandlerRegistry.getResolvers()).thenReturn(resolvers);

        ResourceResolver resolver = browserHistoryConfigurer.addResourceHandlers(resourceHandlerRegistry);

        assertTrue(resolver instanceof BrowserHistoryIndexResolver);
        assertTrue(resolvers.contains(resolver));
    }
}
