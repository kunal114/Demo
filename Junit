import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.web.SecurityFilterChain;

import static org.mockito.Mockito.*;

@ExtendWith(MockitoExtension.class)
class SecurityConfigurationTest {

    @Mock
    private HttpSecurity httpSecurityMock;

    private SecurityConfiguration securityConfiguration;

    @BeforeEach
    void setUp() {
        securityConfiguration = new SecurityConfiguration();
    }

    @Test
    void testFilterChain() throws Exception {
        SecurityFilterChain filterChain = securityConfiguration.filterChain(httpSecurityMock);

        verify(httpSecurityMock, times(1)).authorizeHttpRequests();
        verify(httpSecurityMock, times(1)).anyRequest();
        verify(httpSecurityMock, times(1)).permitAll();
        verify(httpSecurityMock, times(1)).csrf();
        verify(httpSecurityMock, times(1)).disable();
        verify(httpSecurityMock, times(1)).build();
    }

    @Test
    void testWebSecurityCustomizer() throws Exception {
        SecurityConfiguration.WebSecurityCustomizer customizer = securityConfiguration.webSecurityCustomizer();

        WebSecurityCustomizer.WebSecurityCustomizerConfig config = mock(WebSecurityCustomizer.WebSecurityCustomizerConfig.class);
        customizer.customize(config);

        verify(config, times(1)).ignoring();
        verify(config, times(1)).requestMatchers("/**");
    }
}
