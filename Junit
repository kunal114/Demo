import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;
import feign.RequestTemplate;

import static org.mockito.Mockito.*;
import static org.junit.jupiter.api.Assertions.*;

class FeignInterceptorTest {

    private FeignInterceptor interceptor;

    @Mock
    private RequestTemplate requestTemplate;

    @BeforeEach
    void setUp() {
        MockitoAnnotations.openMocks(this);
        interceptor = new FeignInterceptor();
    }

    @Test
    void testApply() {
        // Given
        when(requestTemplate.url()).thenReturn("http://example.com/api");

        // When
        interceptor.apply(requestTemplate);

        // Then
        verify(requestTemplate).header(eq("uuid"), anyString());
        verify(requestTemplate).url();

        // Capture the UUID argument
        var uuidCaptor = ArgumentCaptor.forClass(String.class);
        verify(requestTemplate).header(eq("uuid"), uuidCaptor.capture());

        // Assert that the UUID is valid
        String capturedUuid = uuidCaptor.getValue();
        assertNotNull(capturedUuid);
        assertTrue(capturedUuid.matches("^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$"));
    }
}
