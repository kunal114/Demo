import pandas as pd
import numpy as np
from rule_discoverer import RuleDiscoverer
from rule_validator import RuleValidator
from categorical_handler import CategoricalHandler
from feature_engineering import FeatureEngineer

def main(input_df, output_df, categorical_cols=None):
    """
    Main function to orchestrate the rule discovery process.
    
    Args:
        input_df (pd.DataFrame): Input dataset with N columns
        output_df (pd.DataFrame): Output dataset with M columns
        categorical_cols (list): List of categorical column names in the input dataset
    
    Returns:
        dict: Discovered transformation rules
    """
    print("Starting rule discovery process...")
    
    # Initialize components
    categorical_handler = CategoricalHandler(categorical_cols)
    feature_engineer = FeatureEngineer(input_df, output_df)
    rule_discoverer = RuleDiscoverer(categorical_handler)
    rule_validator = RuleValidator()
    
    # Step 1: Handle the N vs M relationship
    print(f"Input columns (N): {len(input_df.columns)}")
    print(f"Output columns (M): {len(output_df.columns)}")
    
    # Step 2: Generate candidate features if M > N
    if len(output_df.columns) > len(input_df.columns):
        print("M > N: Performing feature generation...")
        enhanced_input_df = feature_engineer.generate_candidate_features()
    else:
        enhanced_input_df = input_df.copy()
    
    # Step 3: Segment data by categorical features
    segments = categorical_handler.segment_data(enhanced_input_df)
    
    # Step 4: Discover rules per segment
    all_rules = {}
    for segment_name, segment_df in segments.items():
        segment_output = categorical_handler.get_corresponding_output(output_df, segment_df)
        
        print(f"Discovering rules for segment: {segment_name}")
        segment_rules = rule_discoverer.discover_rules(segment_df, segment_output)
        
        # Store discovered rules with segment information
        for output_col, rule in segment_rules.items():
            if output_col not in all_rules:
                all_rules[output_col] = {}
            all_rules[output_col][segment_name] = rule
    
    # Step 5: Validate rules on test data
    validation_accuracy = rule_validator.validate_rules(all_rules, enhanced_input_df, output_df, 
                                                       categorical_handler)
    
    print(f"Overall rule validation accuracy: {validation_accuracy:.2f}")
    
    return all_rules

if __name__ == "__main__":
    # Example usage
    input_data = pd.DataFrame({
        'input_col1': [10, 20, 30, 40, 50, 60],
        'input_col2': [5, 15, 25, 35, 45, 55],
        'category': ['A', 'B', 'A', 'B', 'A', 'B']
    })
    
    output_data = pd.DataFrame({
        'output_col1': [20, 65, 60, 85, 100, 105],
        'output_col2': [15, 35, 55, 75, 95, 115],
        'output_col3': [15, 5, 55, 5, 95, 5]
    })
    
    discovered_rules = main(input_data, output_data, categorical_cols=['category'])
    
    # Print discovered rules in a readable format
    for output_col, rules_by_segment in discovered_rules.items():
        print(f"\nRules for {output_col}:")
        for segment, rule in rules_by_segment.items():
            print(f"  When {segment}: {rule}")
