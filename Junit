import org.junit.jupiter.api.Test;
import org.springframework.web.servlet.resource.ResourceResolver;
import org.springframework.web.servlet.resource.ResourceResolverChain;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertTrue;

class ApplicationConfigurationTest {

    private final ApplicationConfiguration.BrowserHistoryConfigurer browserHistoryConfigurer = new ApplicationConfiguration.BrowserHistoryConfigurer();

    @Test
    void testResourceLocations() {
        String[] resourceLocations = (String[]) ReflectionTestUtils.getStaticFieldValue(ApplicationConfiguration.class, "RESOURCE_LOCATIONS");
        assertEquals(6, resourceLocations.length);
        assertEquals("classpath:/META-INF/resources/", resourceLocations[0]);
        assertEquals("classpath:/resources/", resourceLocations[1]);
        assertEquals("classpath:/static/", resourceLocations[2]);
        assertEquals("classpath:/public/", resourceLocations[3]);
        assertEquals("classpath:/", resourceLocations[4]);
        assertEquals("classpath:/***", resourceLocations[5]);
    }

    @Test
    void testAddResourceHandlers() {
        ResourceHandlerRegistry registry = new ResourceHandlerRegistry();
        ResourceResolver resolver = browserHistoryConfigurer.addResourceHandlers(registry);

        assertTrue(resolver instanceof BrowserHistoryIndexResolver);

        ResourceResolverChain chain = (ResourceResolverChain) registry.getHandlerInstances()
                .stream()
                .filter(instance -> instance instanceof ResourceResolverChain)
                .findFirst()
                .orElse(null);

        assertNotNull(chain);
        assertTrue(chain.getResolvers().contains(resolver));
    }
}
