@Test
void testGetConnectionWithRefresh() throws SQLException, Exception {
    // Arrange
    when(mockDelegate.getConnection()).thenReturn(mockConnection);
    when(mockEpvConfigVSI.retrieveEpvPasswordForAwsRds()).thenReturn("fidpss");
    when(mockAwsRdsDbPasswordFetch.getAuthToken(
        any(), any(), any(), any(), any(), eq("fidpss"), any(), any(), any(), any(), anyBoolean()
    )).thenReturn("newToken");

    // Set lastRefreshTime to more than 14 minutes ago
    setLastRefreshTime(System.currentTimeMillis() - 900000);

    // Act
    Connection result = dataSource.getConnection();

    // Assert
    assertSame(mockConnection, result);
    verify(mockEpvConfigVSI, times(1)).retrieveEpvPasswordForAwsRds();
    verify(mockAwsRdsDbPasswordFetch, times(1)).getAuthToken(
        any(), any(), any(), any(), any(), eq("fidpss"), any(), any(), any(), any(), anyBoolean()
    );
    assertEquals("newToken", dataSource.getPassword());
    assertEquals("newToken", dataSource.getConnectionProperties().getProperty("password"));
}

// Add this method to your test class if it's not already there
private void setLastRefreshTime(long time) throws Exception {
    java.lang.reflect.Field field = TokenRefreshingDataSource.class.getDeclaredField("lastRefreshTime");
    field.setAccessible(true);
    field.set(dataSource, time);
}
