@Test
void testUploadRequestCreationException() throws ServletException, IOException {
    HttpServletRequest mockRequest = mock(HttpServletRequest.class);
    HttpServletResponse mockResponse = mock(HttpServletResponse.class);
    FilterChain mockFilterChain = mock(FilterChain.class);
    
    YourFilter filter = new YourFilter();
    
    // Mock the necessary methods to reach the UploadRequest creation
    when(mockRequest.getInputStream()).thenReturn(new ServletInputStream() {
        @Override
        public boolean isFinished() { return true; }
        @Override
        public boolean isReady() { return true; }
        @Override
        public void setReadListener(ReadListener readListener) {}
        @Override
        public int read() throws IOException { return -1; }
    });
    
    // Mock UploadRequest constructor to throw PaceServletException
    mockStatic(UploadRequest.class);
    when(UploadRequest.class, "new", any(HttpServletRequest.class), any(byte[].class))
        .thenThrow(new PaceServletException("Test exception"));
    
    filter.doFilterInternal(mockRequest, mockResponse, mockFilterChain);
    
    // Verify that the exception is logged
    // You might need to use a logging framework and capture logs to verify this
}
