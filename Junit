import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;

import java.sql.ResultSet;
import java.sql.SQLException;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.mockito.Mockito.when;

class SecurityRowMapperTest {

    @Mock
    private ResultSet resultSet;

    private SecurityRowMapper rowMapper;

    @BeforeEach
    void setUp() {
        MockitoAnnotations.openMocks(this);
        rowMapper = new SecurityRowMapper();
    }

    @Test
    void mapRow_withNonNullValue_shouldReturnTrimmedValue() throws SQLException {
        // Arrange
        when(resultSet.getString("SECURITY_ADP_NBR")).thenReturn("  123ABC  ");

        // Act
        String result = rowMapper.mapRow(resultSet, 1);

        // Assert
        assertEquals("123ABC", result);
    }

    @Test
    void mapRow_withNullValue_shouldReturnEmptyString() throws SQLException {
        // Arrange
        when(resultSet.getString("SECURITY_ADP_NBR")).thenReturn(null);

        // Act
        String result = rowMapper.mapRow(resultSet, 1);

        // Assert
        assertEquals("", result);
    }
}
