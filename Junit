import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import javax.servlet.http.HttpServletRequest;
import static org.mockito.Mockito.*;
import static org.junit.jupiter.api.Assertions.*;

class MutableHttpServletRequestTest {

    private HttpServletRequest mockRequest;
    private MutableHttpServletRequest mutableRequest;

    @BeforeEach
    void setUp() {
        mockRequest = mock(HttpServletRequest.class);
        mutableRequest = new MutableHttpServletRequest(mockRequest);
    }

    @Test
    void testPutHeader() {
        String headerName = "X-Custom-Header";
        String headerValue = "CustomValue";

        mutableRequest.putHeader(headerName, headerValue);
        assertEquals(headerValue, mutableRequest.getHeader(headerName));
    }

    @Test
    void testGetHeaderFromWrappedRequest() {
        String headerName = "X-Original-Header";
        String headerValue = "OriginalValue";

        when(mockRequest.getHeader(headerName)).thenReturn(headerValue);
        assertEquals(headerValue, mutableRequest.getHeader(headerName));
    }

    @Test
    void testGetHeaderCustomOverwritesOriginal() {
        String headerName = "X-Common-Header";
        String originalValue = "OriginalValue";
        String customValue = "CustomValue";

        when(mockRequest.getHeader(headerName)).thenReturn(originalValue);

        mutableRequest.putHeader(headerName, customValue);
        assertEquals(customValue, mutableRequest.getHeader(headerName));
    }
}
