import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.web.SecurityFilterChain;
import org.springframework.security.config.Customizer;

import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.mockito.ArgumentMatchers.any;
import static org.mockito.Mockito.when;

@ExtendWith(MockitoExtension.class)
class SecurityConfigurationTest {

    @Mock
    private HttpSecurity http;

    @Mock
    private SecurityFilterChain securityFilterChain;

    @Test
    public void test_filterChain() throws Exception {
        SecurityConfiguration config = new SecurityConfiguration();

        // Mock the necessary methods
        when(http.authorizeHttpRequests(any(Customizer.class))).thenReturn(http);
        when(http.csrf(any(Customizer.class))).thenReturn(http);
        when(http.build()).thenReturn(securityFilterChain);

        SecurityFilterChain result = config.filterChain(http);

        assertNotNull(result);
    }
}
