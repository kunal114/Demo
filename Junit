import static org.junit.jupiter.api.Assertions.*;
import static org.mockito.Mockito.*;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

import java.util.*;

public class YourClassTest {

    private YourClass yourClass; // Replace with the actual class name containing formHTMLPage
    private KopsProperties kopsProperties;

    @BeforeEach
    public void setUp() {
        yourClass = new YourClass(); // Replace with actual class instantiation
        kopsProperties = mock(KopsProperties.class);
    }

    @Test
    public void testFormHTMLPageWithNonEmptyProperties() {
        // Setup mock data
        Map<String, List<String>> properties = new HashMap<>();
        properties.put("Category1/Key1", Arrays.asList("Value1"));
        properties.put("Category1/Key2", Arrays.asList("Value2"));
        properties.put("USER_LOGIN_ID", Arrays.asList("user123"));

        when(kopsProperties.getProperties()).thenReturn(properties);

        String result = yourClass.formHTMLPage(kopsProperties);

        // Expected HTML snippet
        String expectedHTML = "<html><head><title>Kops User Information</title></head><body>"
                + "<table width=\"95%\" border='1' cellspacing=\"8\" cellpadding=\"1\">"
                + "<tbody>"
                + "<tr bgcolor='lightgrey'><td colspan='2'><b>Category1</b></td></tr>"
                + "<tr><td>Key1</td><td>Value1</td></tr>"
                + "<tr><td>Key2</td><td>Value2</td></tr>"
                + "<tr><td>USER_LOGIN_ID</td><td>user123</td></tr>"
                + "</tbody></table></body></html>";

        // Verify HTML structure
        assertTrue(result.contains(expectedHTML), "The HTML generated does not match the expected output.");
    }

    @Test
    public void testFormHTMLPageWithEmptyProperties() {
        // Setup mock data
        Map<String, List<String>> properties = new HashMap<>();
        when(kopsProperties.getProperties()).thenReturn(properties);

        String result = yourClass.formHTMLPage(kopsProperties);

        // Expected HTML snippet
        String expectedHTML = "<html><head><title>Kops User Information</title></head><body>"
                + "<table width=\"95%\" border='1' cellspacing=\"8\" cellpadding=\"1\">"
                + "<tbody></tbody></table></body></html>";

        // Verify HTML structure
        assertEquals(expectedHTML, result, "The HTML generated does not match the expected output.");
    }

    @Test
    public void testFormHTMLPageWithNullProperties() {
        // Setup mock data
        when(kopsProperties.getProperties()).thenReturn(null);

        String result = yourClass.formHTMLPage(kopsProperties);

        // Expected HTML snippet
        String expectedHTML = "<html><head><title>Kops User Information</title></head><body>"
                + "<table width=\"95%\" border='1' cellspacing=\"8\" cellpadding=\"1\">"
                + "<tbody></tbody></table></body></html>";

        // Verify HTML structure
        assertEquals(expectedHTML, result, "The HTML generated does not match the expected output.");
    }
}
